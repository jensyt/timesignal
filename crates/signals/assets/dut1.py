import sys
from decimal import Decimal, InvalidOperation

DUT1_VALS_WWVB = [
	0xA2, 0xA1, 0xA0, 0x41,
	0x45, 0xA3, 0xA2, 0xA1,
	0xA0, 0x43, 0xA6, 0xA4,
	0xA3, 0xA2, 0xA0, 0x41,
	0xA8, 0xA3, 0xA2, 0xA1,
	0xA0, 0x41, 0x42, 0x43,
	0x44, 0xA5, 0xA4, 0xA3,
	0xA2, 0xA1, 0xA0, 0x41,
	0x42, 0x43, 0x44, 0x45,
	0xA5, 0xA4, 0xA3, 0xA2,
	0xA1, 0xA0, 0x41, 0x42,
	0x43, 0xA7, 0xA6, 0xA5,
	0xA4, 0xA3, 0xA2, 0xA1,
	0xA0, 0x41, 0x42, 0x43,
	0x44, 0x45, 0x46, 0xA3,
	0xA2, 0xA1, 0xA0, 0x41,
	0x42, 0x43, 0x44, 0x45,
	0x46, 0xA3, 0xA2, 0xA1,
	0xA0, 0x41, 0x42, 0x43,
	0x44, 0x45, 0x46, 0xA4,
	0xA3, 0xA2, 0xA1, 0xA0,
	0x41, 0x42, 0x43, 0x44,
	0x45, 0x46, 0x47, 0xA3,
	0xA2, 0xA1, 0xA0, 0x41,
	0x42, 0x43, 0x44, 0xA6,
	0xA5, 0xA4, 0xA3, 0xA2,
	0xA1, 0xA0, 0x41, 0x42,
	0x41, 0xA0, 0xA1, 0xA0
]

DUT1_LOOKUP_MSF = [0x00, 0x80, 0xC0, 0xE0, 0xF0, 0xF8, 0xFC, 0xFE, 0xFF, 0xFF]

def help():
	print("Usage:", sys.argv[0], "command\n")
	print("Commands:")
	print("  convert val")
	print("  table")
	exit(-1)

if len(sys.argv) < 2:
	help()

if sys.argv[1] == "convert":
	if len(sys.argv) < 3:
		help()

	try:
		val = Decimal(sys.argv[2])
	except InvalidOperation:
		print("Error: argument must be a number")
		exit(-2)

	val = val.scaleb(1).to_integral_value().as_tuple()

	if val.sign == 0:
		print("WWVB:", f'0x{0xA0 | val.digits[0]:02X}')
		print("MSF: ", f'0x{DUT1_LOOKUP_MSF[val.digits[0]]:02X}00')
	else:
		print("WWVB:", f'0x{0x40 | val.digits[0]:02X}')
		print("MSF: ", f'0x00{DUT1_LOOKUP_MSF[val.digits[0]]:02X}')

elif sys.argv[1] == "table":
	print("WWVB:")
	for i, v in enumerate(DUT1_VALS_WWVB):
		end = "\n" if (i + 1) % 4 == 0 else ""
		print(f'0x{v:02X}, ', end=end)

	print("\nMSF:")
	for i, v in enumerate(DUT1_VALS_WWVB):
		end = "\n" if (i + 1) % 4 == 0 else ""
		m = DUT1_LOOKUP_MSF[v & 0xF]
		if v & 0x40 > 0:
			print(f'0x00{m:02X}, ', end=end)
		else:
			print(f'0x{m:02X}00, ', end=end)

else:
	print("Unknown command:", sys.argv[1], "\n")
	help()
